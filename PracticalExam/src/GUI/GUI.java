/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DTO.Product;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    Locale current;

    public GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
     
        loadLanguage("en", "US");
    }

    void loadLanguage(String lang, String country) {
        current = new Locale(lang, country);
        String title;
        
        ResourceBundle resouce = ResourceBundle.getBundle("ngongu/language", current);
        this.setTitle(resouce.getString("title"));
        lblID.setText(resouce.getString("lblID"));
        lblName.setText(resouce.getString("lblName"));
        lblPrice.setText(resouce.getString("lblPrice"));
        lblSearch.setText(resouce.getString("lblSearch"));
        btnLoad.setText(resouce.getString("btnLoad"));
        btnAdd.setText(resouce.getString("btnAdd"));
        lblLanguage.setText(resouce.getString("lblLanguage"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnLoad = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        rdoEnglish = new javax.swing.JRadioButton();
        rdoVietnamese = new javax.swing.JRadioButton();
        lblLanguage = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        btnLoad.setText("LOAD DATA");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearch.setText("SEARCH");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblID.setText("ID");

        lblName.setText("NAME");

        lblPrice.setText("PRICE");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoEnglish);
        rdoEnglish.setSelected(true);
        rdoEnglish.setText("English");
        rdoEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoEnglishActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoVietnamese);
        rdoVietnamese.setText("Vietnamese");
        rdoVietnamese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoVietnameseActionPerformed(evt);
            }
        });

        lblLanguage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLanguage.setText("CHOOSE LANGUAGE");

        btnNew.setText("NEW");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(rdoEnglish)
                        .addGap(66, 66, 66)
                        .addComponent(rdoVietnamese))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(lblLanguage)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnAdd)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPrice))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                            .addComponent(txtID))))
                                .addGap(94, 94, 94))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(181, 181, 181))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnLoad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(167, 167, 167))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrice)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnNew)
                            .addComponent(btnLoad))
                        .addGap(18, 18, 18)
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(lblLanguage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoEnglish)
                    .addComponent(rdoVietnamese))
                .addGap(92, 92, 92))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        Vector header = DAO.ProductDAO.getcolumnProduct();
        Vector<Product> list = DAO.ProductDAO.getProduct();
        Vector data = new Vector();
        for (Product pr : list) {
            Vector row = new Vector();
            row.add(pr.getId());
            row.add(pr.getName());
            row.add(pr.getPrice());

            data.add(row);

        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setDataVector(data, header);
        txtID.setText("");
        txtName.setText("");
        txtPrice.setText("");
        txtSearch.setText("");
        txtID.setEnabled(false);
        txtName.setEnabled(false);
        txtPrice.setEnabled(false);
    }//GEN-LAST:event_btnLoadActionPerformed
    private Vector<Product> findName(String name) {
        Vector<Product> list = DAO.ProductDAO.getProduct();

        Vector<Product> list2 = new Vector<>();
        for (Product pr : list) {
            if (pr.getName().toUpperCase().contains(name.toUpperCase())) {
                list2.add(pr);
            }
        }

        if (list2 != null) {
            return list2;
        }

        return null;
    }

    void loadData() {
        Vector header = DAO.ProductDAO.getcolumnProduct();
        Vector<Product> list = DAO.ProductDAO.getProduct();
        Vector data = new Vector();
        for (Product pr : list) {
            Vector row = new Vector();
            row.add(pr.getId());
            row.add(pr.getName());
            row.add(pr.getPrice());

            data.add(row);

        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setDataVector(data, header);
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        try {
            int id = Integer.parseInt(txtID.getText());
            String name = txtName.getText();
            float price = Float.parseFloat(txtPrice.getText());
            if (Float.parseFloat(txtPrice.getText()) < 0) {
                JOptionPane.showMessageDialog(null, "Invalide price");
                return;
            }
            if (DAO.ProductDAO.insertProduct(id, name, price) != 0) {
                JOptionPane.showMessageDialog(null, "Add successfull");
                loadData();
                txtID.setText("");
                txtName.setText("");
                txtPrice.setText("");
                txtID.setEnabled(false);
                txtName.setEnabled(false);
                txtPrice.setEnabled(false);
            }

        } catch (Exception e) {
            if (e.getMessage().contains("Cannot insert duplicate key")) {
                JOptionPane.showMessageDialog(null, "ID dupplicate");
            } else if (txtID.getText().equals("") || txtName.getText().equals("") || txtPrice.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please input fill information");
            } else {
                JOptionPane.showMessageDialog(null, "Invalid");
            }
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
//        txtID.setEditable(false);
//        txtPrice.setEditable(false);
//        txtName.setEditable(false);
        txtID.setEnabled(false);
        txtPrice.setEnabled(false);
        txtName.setEnabled(false);
        int pos = jTable1.getSelectedRow();
        int code = (int) jTable1.getValueAt(pos, 0);

        Vector<Product> list = DAO.ProductDAO.getProduct();

        Vector<Product> pr = null;

        for (Product product : list) {
            if (product.getId() == code) {
                pr = list;
                break;
            }
        }
        if (pos >= 0) {
            txtID.setText(jTable1.getValueAt(pos, 0).toString());
            txtName.setText((String) jTable1.getValueAt(pos, 1));
            txtPrice.setText(jTable1.getValueAt(pos, 2).toString());

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String name = txtSearch.getText();

        if (txtSearch.getText().equals("")) {
//            DAO.SupplierDAO.getSupplier();
            loadData();
        }
        Vector<Product> list = findName(txtSearch.getText());

        txtID.setText("");
        txtName.setText("");
        txtPrice.setText("");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        Vector data = new Vector();
        Vector header = new Vector();
        header.add("ID");
        header.add("Name");
        header.add("Price");
        if (!list.isEmpty()) {
            for (Product sp : list) {
                Vector row = new Vector();
                row.add(sp.getId());
                row.add(sp.getName());
                row.add(sp.getPrice());
                data.add(row);

                model.setDataVector(data, header);

            }
//            }
        } else {
            model.setDataVector(data, header);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void rdoEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoEnglishActionPerformed
        // TODO add your handling code here:
        if (rdoEnglish.isSelected()) {
            loadLanguage("en", "US");
         
            Vector header = new Vector();
            header.add("ID");
            header.add("Name");
            header.add("Price");
            Vector<Product> list = DAO.ProductDAO.getProduct();
            Vector data = new Vector();
            for (Product pr : list) {
                Vector row = new Vector();
                row.add(pr.getId());
                row.add(pr.getName());
                row.add(pr.getPrice());

                data.add(row);

            }
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setDataVector(data, header);
            txtSearch.setText("");
            txtID.setText("");
            txtName.setText("");
            txtPrice.setText("");
            txtSearch.setText("");
        }

    }//GEN-LAST:event_rdoEnglishActionPerformed

    private void rdoVietnameseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoVietnameseActionPerformed
        // TODO add your handling code here:

        if (rdoVietnamese.isSelected()) {
            loadLanguage("vn", "VN");
       
            Vector header = new Vector();
            header.add("Mã");
            header.add("Tên");
            header.add("Giá");
            Vector<Product> list = DAO.ProductDAO.getProduct();
            Vector data = new Vector();
            for (Product pr : list) {
                Vector row = new Vector();
                row.add(pr.getId());
                row.add(pr.getName());
                row.add(pr.getPrice());

                data.add(row);

            }
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setDataVector(data, header);
            txtSearch.setText("");
            txtID.setText("");
            txtName.setText("");
            txtPrice.setText("");
            txtSearch.setText("");

        }
    }//GEN-LAST:event_rdoVietnameseActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        txtID.setText("");
        txtName.setText("");
        txtPrice.setText("");
        txtSearch.setText("");
        txtID.setEnabled(true);
        txtPrice.setEnabled(true);
        txtName.setEnabled(true);
        jTable1.setSelectionMode(0);
    }//GEN-LAST:event_btnNewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnNew;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JRadioButton rdoEnglish;
    private javax.swing.JRadioButton rdoVietnamese;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
