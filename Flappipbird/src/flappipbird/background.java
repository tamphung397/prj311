/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flappipbird;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class background extends javax.swing.JPanel {

    Column[] c;
    boolean conchoi = true;
    boolean conchoichim = true;
    Bird cu;

    /**st
     * Creates new form background
     */
    public background() {
        init();
        initComponents();
t.start();
t2.start();
    }
//  public  void run(){
//      while(conchoi){
//          for (Column column : c) {
//              column.x = column.x-10;
//          }
//          for (Column column : c) {
//              if(column.x == 0){ // neu da sat panel
//                  column.x = 1000;
//              }
//          }
//          repaint();
//          try {
//              Thread.sleep(1000);
//          } catch (Exception e) {
//              e.printStackTrace();
//          }
//      }
//  }
    Thread t = new Thread(new Runnable() {
        @Override
        public void run() {
            while (conchoi) {
                for (Column column : c) {
                    column.x = column.x - 10;
                }
                if(isGaneOver()){
                    conchoi = false;
                  if(  JOptionPane.showConfirmDialog(null, "Do you want play again?")== JOptionPane.YES_OPTION){
                      conchoi=true;
                      conchoichim =true;
                       
                      init();
                      repaint();
                  }
                    
                }
                for (Column column : c) {
                    if (column.x == 0) {
                        column.x = 1000;
                    }
                }
                repaint();
                //goi ham re paint nghia la goi ham paint component
                try {
                    Thread.sleep(50);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    });
        Thread t2 = new Thread(new Runnable() {
        @Override
        public void run() {
            while(conchoichim){
                cu.y = cu.y+5;
                if(isGaneOver()){
                    conchoichim = false;
                
                    
                }
                  cu.y = cu.y+5;
                repaint();
                try {
                    Thread.sleep(500);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    });
    
//    @Override
//    public void paintComponents(Graphics g) {
//        super.paintComponent(g);
//       
//    }
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
//         this.setSize(1500, 1000);
        this.setBackground(Color.cyan);
        for (Column column : c) {
            column.drawColumn(g);
        }
        cu.drawChim(g);
    }

    void init() {
        c = new Column[6];
        c[0] = new Column(Color.GREEN, 250, 0, 100, 250);
        c[1] = new Column(Color.GREEN, 600, 0, 80, 350);
        c[2] = new Column(Color.GREEN, 900, 0, 120, 250);
        c[3] = new Column(Color.GREEN, 400, 700, 100, 600);
        c[4] = new Column(Color.GREEN, 700, 450, 80, 700);
        c[5] = new Column(Color.GREEN, 1000, 400, 120, 800);
        cu = new Bird("1a.png", 100, 450, 70, 50);

    }
    
    public  boolean isGaneOver(){
        for (Column column : c) {
            if(column.intersects(cu)){
                return true;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
